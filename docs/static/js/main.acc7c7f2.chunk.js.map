{"version":3,"sources":["images/title.png","redux/reducers/pokemonListReducer.js","redux/actions/pokemonListAction.js","redux/reducers/pokemonFeaturesReducer.js","redux/actions/pokemonFeaturesActions.js","redux/reducers/modalReducer.js","redux/actions/modalActions.js","redux/actions/comparisonActions.js","redux/reducers/comparisonReducer.js","redux/reducers/lookForReducer.js","redux/actions/lookForActions.js","redux/reducers/index.js","redux/store.js","components/NavBar.js","components/PokemonList.js","components/Graph.js","Util.js","components/InfoFeatures.js","components/InfoModal.js","components/ComparisonCard.js","components/ComparisonFeatures.js","components/ComparisonModal.js","components/Home.js","App.js","index.js"],"names":["module","exports","initialState","pokemons","isFetching","error","pokemonsList","state","action","type","payload","features","otherFeatures","isOtherFetching","pokemonFeatures","currentpokemon","id","compareTo","comparison","lookFor","pokemonResults","combineReducers","pokemonList","currentPokemon","store","createStore","root","applyMiddleware","logger","thunk","connect","dispatch","props","React","useRef","useEffect","className","to","style","textDecoration","placeholder","autoComplete","ref","onChange","currentValue","current","value","toLowerCase","results","filter","pokemon","name","startsWith","fetchPokemons","limit","fetch","then","res","json","catch","toString","fetchFeatures","url","fetchOthers","updatePokemon","useState","isScrolled","setIsScrolled","setId","isClicked","setIsClicked","pokemonToShow","setPokemonToShow","window","addEventListener","scrollHandler","removeEventListener","listSize","length","actionToDo","Math","ceil","innerHeight","document","documentElement","scrollTop","offsetHeight","cardId","pokemonSelected","parseInt","pokemonClickHandler","event","pokemonId","currentTarget","onScroll","map","substring","key","onClick","src","alt","toUpperCase","graphRef","stats","ctx","getContext","createGraph","Chart","helpers","each","instances","instance","chart","canvas","destroy","labels","stat","colors","colorsLength","datasets","index","data","base_stat","backgroundColor","responsive","options","legend","display","title","text","fontSize","scales","yAxes","ticks","beginAtZero","stepSize","padding","gridLines","drawOnChartArea","color","tickMarkLength","xAxes","offsetGridLines","getGender","genderRate","gender","setGender","description","setDescription","flavor_text_entries","flavor_text","gender_rate","height","weight","abilities","ability","types","restartComparison","restartPokemon","openModal","setOpenModal","closeHandler","indexOf","genderOne","setGenderOne","genderTwo","setGenderTwo","Home","App","path","exact","component","NavBar","PokemonList","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.acc7c7f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.cf6ce1ef.png\";","import { FETCH_POKEMONS_ERROR, FETCH_POKEMONS_SUCCESS, FETCH_POKEMONS_REQUEST } from '../actions/pokemonListAction'\n\nconst initialState = {\n  pokemons: [],\n  isFetching: false,\n  error: null\n}\n\nfunction pokemonsList (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POKEMONS_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case FETCH_POKEMONS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        pokemons: action.payload.pokemons\n      }\n\n    case FETCH_POKEMONS_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload.error\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default pokemonsList","export const FETCH_POKEMONS_REQUEST = 'FETCH_POKEMONS_REQUEST'\nexport const FETCH_POKEMONS_SUCCESS = 'FETCH_POKEMONS_SUCCESS'\nexport const FETCH_POKEMONS_ERROR = 'FETCH_POKEMONS_ERROR'\n\nexport const fetchPokemons = (limit) => (dispatch) => {\n  dispatch({ type: FETCH_POKEMONS_REQUEST })\n  fetch(`https://pokeapi.co/api/v2/pokemon/?offset=0&limit=${limit}`)\n    .then(res => res.json())\n    .then(pokemons => {\n      dispatch({\n        type: FETCH_POKEMONS_SUCCESS,\n        payload: {\n          pokemons: pokemons.results\n        }\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_POKEMONS_ERROR,\n        error: error.toString()\n      })\n    })\n}","import { \n  FETCH_FEATURE_ERROR,\n  FETCH_FEATURE_SUCCESS,\n  FETCH_FEATURE_REQUEST,\n  FETCH_OTHERFEATURES_ERROR,\n  FETCH_OTHERFEATURES_SUCCESS,\n  FETCH_OTHERFEATURES_REQUEST\n  } from '../actions/pokemonFeaturesActions'\n\nconst initialState = {\n  features: [],\n  otherFeatures:[],\n  error: null,\n  isFetching: true,\n  isOtherFetching:true\n}\n\nfunction pokemonFeatures (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_FEATURE_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case FETCH_FEATURE_SUCCESS:\n      return {\n        ...state,\n        features: [...state.features, action.payload.features], \n        isFetching: false\n      }\n\n    case FETCH_FEATURE_ERROR:\n      return {\n        ...state,\n        error: action.payload.error, \n        isFetching: false\n      }\n\n    case FETCH_OTHERFEATURES_REQUEST:\n      return {\n        ...state, \n        isOtherFetching: true\n      }\n\n    case FETCH_OTHERFEATURES_SUCCESS:\n      return {\n        ...state,\n        otherFeatures: [...state.otherFeatures, action.payload.otherFeatures],\n        isOtherFetching: false\n      }\n\n    case FETCH_OTHERFEATURES_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isOtherFetching: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default pokemonFeatures","export const FETCH_FEATURE_REQUEST = 'FETCH_FEATURE_REQUEST'\nexport const FETCH_FEATURE_SUCCESS = 'FETCH_FEATURE_SUCCESS'\nexport const FETCH_FEATURE_ERROR = 'FETCH_FEATURE_ERROR'\nexport const FETCH_OTHERFEATURES_REQUEST = 'FETCH_OTHERFEATURES_REQUEST'\nexport const FETCH_OTHERFEATURES_SUCCESS = 'FETCH_OTHERFEATURES_SUCCESS'\nexport const FETCH_OTHERFEATURES_ERROR = 'FETCH_OTHERFEATURES_ERROR'\n\nexport const fetchFeatures = (url) => (dispatch) => {\n  dispatch({ type: FETCH_FEATURE_REQUEST })\n  fetch(url)\n    .then(res => res.json())\n    .then(pokemon => {\n      dispatch({\n        type: FETCH_FEATURE_SUCCESS,\n        payload: {\n          features: pokemon\n        }\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_FEATURE_ERROR,\n        error: error.toString()\n      })\n    })\n}\n\nexport const fetchOthers = (id) => (dispatch) => {\n  dispatch({ type: FETCH_OTHERFEATURES_REQUEST })\n  fetch('https://pokeapi.co/api/v2/pokemon-species/'+id)\n    .then(res => res.json())\n    .then(pokemon => {\n      dispatch({\n        type: FETCH_OTHERFEATURES_SUCCESS,\n        payload: {\n          otherFeatures: pokemon\n        }\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_OTHERFEATURES_ERROR,\n        error: error.toString()\n      })\n    })\n}\n","import { RESTART_POKEMON, UPDATE_POKEMON } from '../actions/modalActions'\n\nconst initialState = 0\n\nfunction currentpokemon (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_POKEMON:\n      return  action.payload.id\n    case RESTART_POKEMON:\n        return  0\n    default:\n      return state\n  }\n}\n\nexport default currentpokemon","export const UPDATE_POKEMON = 'UPDATE_POKEMON'\nexport const RESTART_POKEMON = 'RESTART_POKEMON'\n\nexport const updatePokemon= (id) => ({\n  type: UPDATE_POKEMON,\n  payload: {\n    id\n  }\n})\n\nexport const restartPokemon= () => ({\n  type: RESTART_POKEMON\n})","export const COMPARE_WITH = 'COMPARE_WITH'\nexport const RESTART = 'RESTART'\n\nexport const compareTo= (id) => ({\n  type: COMPARE_WITH,\n  payload: {\n    id\n  }\n})\n\nexport const restartComparison= () => ({\n  type: RESTART\n})","import { COMPARE_WITH, RESTART } from '../actions/comparisonActions'\n\nconst initialState = []\n\nfunction comparison (state = initialState, action) {\n  switch (action.type) {\n    case COMPARE_WITH:\n      return  [\n        ...state,\n        action.payload.id\n      ]\n      case RESTART:\n      return  []\n    default:\n      return state\n  }\n}\n\nexport default comparison","import { LOOK_FOR } from '../actions/lookForActions'\n\nconst initialState = []\n\nfunction lookFor (state = initialState, action) {\n  switch (action.type) {\n    case LOOK_FOR:\n      return action.payload.pokemonResults\n    default:\n      return state\n  }\n}\n\nexport default lookFor","export const LOOK_FOR = 'LOOK_FOR'\n\nexport const lookFor= (pokemonResults) => ({\n  type: LOOK_FOR,\n  payload: {\n    pokemonResults\n  }\n})","import { combineReducers } from 'redux'\nimport pokemonList from './pokemonListReducer'\nimport pokemonFeatures from './pokemonFeaturesReducer'\nimport currentPokemon from './modalReducer'\nimport comparison from './comparisonReducer'\nimport pokemonResults from './lookForReducer'\n\nexport default combineReducers({\n  pokemonList,\n  pokemonFeatures,\n  currentPokemon,\n  comparison,\n  pokemonResults\n})","import { createStore, applyMiddleware } from \"redux\";\nimport root from './reducers/index' \nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n  root,  applyMiddleware(logger, thunk)\n)\n\nexport default store","import React, { useEffect}  from 'react'\nimport '../styles/main.css'\nimport '../styles/navBar.css'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { lookFor } from '../redux/actions/lookForActions'\n\nconst NavBar = (props) => {\n  \n  const lookFor= React.useRef()\n\n  useEffect(() => {\n    if (!props.pokemonList.isFetching) {\n      props.lookFor(props.pokemonList.pokemons)\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.pokemonList.isFetching]);\n\n  const handleInput = () => {\n    const currentValue = lookFor.current.value.toLowerCase()\n    const results = props.pokemonList.pokemons\n      .filter(pokemon => pokemon.name.startsWith(currentValue))\n    props.lookFor(results)\n  }\n  \n  return(\n    <div className='nav-bar'>\n      <div className='main-nav'>\n        <Link to ='/' style={{ textDecoration: 'none' }}>\n          <div className='brand-name'>\n             PokéApp\n          </div>\n        </Link>\n        <Link to ='/pokemon-list' style={{ textDecoration: 'none' }}>\n          <div className='nav-item'>\n              Pokemons\n          </div>\n        </Link>\n      </div>\n      <div>\n       <input className='search-box' type=\"search\" placeholder=\"Search\" autoComplete='on' ref={lookFor} onChange={handleInput}/>\n      </div>\n    </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    lookFor: (pokemonResults) => dispatch(lookFor(pokemonResults))\n  }\n}\n\nexport default connect((state) => {\n  return state\n}, mapDispatchToProps)(NavBar)","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { fetchPokemons } from '../redux/actions/pokemonListAction'\nimport { fetchFeatures, fetchOthers } from '../redux/actions/pokemonFeaturesActions'\nimport { updatePokemon} from '../redux/actions/modalActions'\nimport { compareTo } from '../redux/actions/comparisonActions'\nimport '../styles/main.css'\nimport '../styles/pokemonList.css'\n\nconst PokemonList = (props) =>{  \n  let srcImage = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [id, setId] = useState(0);\n  const [isClicked, setIsClicked] = useState(false);\n  const [pokemonToShow, setPokemonToShow] = useState([]);\n\n  useEffect(() => {\n    props.fetchPokemons(20)\n    window.addEventListener('scroll', scrollHandler);\n    return () => {\n      window.removeEventListener( 'scroll', scrollHandler)\n    }\n  }, []);\n\n  useEffect(() => {\n    setPokemonToShow(props.pokemonResults)\n  }, [props.pokemonResults]);\n\n  useEffect(() => {\n    if (isScrolled) {\n      const listSize=props.pokemonList.pokemons.length\n      props.fetchPokemons(listSize+20)\n      setIsScrolled(false)\n    }\n  }, [isScrolled]);\n  \n  useEffect(() => {\n    if (!props.pokemonFeatures.isFetching && !props.pokemonFeatures.isOtherFetching && isClicked) {\n      actionToDo(id)\n      setIsClicked(false)\n    }\n\t}, [props.pokemonFeatures.isFetching, props.pokemonFeatures.isOtherFetching]);\n\n  const scrollHandler = () => {\n    if (Math.ceil(window.innerHeight + document.documentElement.scrollTop) === document.documentElement.offsetHeight) {\n      setIsScrolled(true)\n    }\n  }\n\n  const actionToDo = (cardId) =>{\n    const pokemonSelected = props.pokemonFeatures.features.filter(pokemon => parseInt(pokemon.id)===parseInt(cardId))[0]\n    if (props.comparison.length === 1) {\n      props.compareTo(pokemonSelected)\n    } else {\n      props.updatePokemon(pokemonSelected)\n    } \n  }\n\n  const pokemonClickHandler = (event) => {\n    const pokemonId = event.currentTarget.id\n    setId(pokemonId)\n    setIsClicked(true)\n    let pokemonExists = props.pokemonFeatures.features.filter(pokemon => parseInt(pokemonId) === parseInt(pokemon.id))\n    if (pokemonExists.length === 0) { \n      props.fetchFeatures(props.pokemonList.pokemons[pokemonId-1].url)\n      props.fetchOthers(pokemonId)\n    } else {\n      actionToDo(pokemonId)\n    }\n  }\n\n  return(\n    <div className = 'pokemon-list' onScroll={scrollHandler}>\n      {pokemonToShow.map((pokemon) => (\n        <div id={pokemon.url.substring(34, pokemon.url.length - 1)} className='pokemon-card' key={pokemon.url} onClick={pokemonClickHandler}>\n          <div className='pokemon-image-container'>\n            <img className='pokemon-image' \n              src = { \n                    srcImage + pokemon.url.substring(34, pokemon.url.length - 1) +'.png'\n                }  \n              alt={pokemon.name}\n            />\n          </div>\n          <div className = 'pokemon-name'>\n            { pokemon.name.toUpperCase() } \n          </div> \n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPokemons: (limit) => dispatch(fetchPokemons(limit)),\n    fetchFeatures: (url) => dispatch(fetchFeatures(url)),\n    fetchOthers: (id) => dispatch(fetchOthers(id)),\n    updatePokemon: (id) => dispatch(updatePokemon(id)),\n    compareTo: (id) => dispatch(compareTo(id))\n  }\n}\n\nexport default connect((state) => {\n  return state\n}, mapDispatchToProps)(PokemonList)","import React, { useRef, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport Chart from 'chart.js';\nimport '../styles/main.css'\nimport '../styles/modal.css';\n\nconst Graph = (props) => {\n  const graphRef = useRef()\n\n  useEffect(() => {\n    let stats = 0\n    const ctx = graphRef.current.getContext('2d');\n    if (props.comparison.length === 2) {\n      stats = props.comparison.map(pokemon => (\n        pokemon.stats\n      ))\n      createGraph(ctx, stats)\n    } else {\n      if (props.currentPokemon !== 0) {\n        stats = [props.currentPokemon.stats]\n        createGraph(ctx, stats)\n      }\n    }\n  \n  }, [props.currentPokemon, props.comparison]);\n\n  const createGraph = (ctx, stats) => {\n    if (stats.length === 1) {\n      Chart.helpers.each(Chart.instances, function (instance) {\n        if (instance.chart.canvas.id === 'chart-mixed') {\n          instance.chart.destroy()\n        }\n      })\n    }\n    const labels = stats[0].map((stat) => (\n      stat.stat.name\n    ))\n    const colors = ['#167a69', '#26b19c'];\n    const colorsLength = colors.length;\n    const datasets = stats.map((stat, index) => ({\n      data: stat.map(stat => (\n        stat.base_stat\n      )),\n      backgroundColor: colors[index % colorsLength]\n    }))\n    new Chart(ctx, {\n      type: 'bar',\n      responsive: true,\n      data: {\n        datasets: datasets,\n        labels: labels\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Stats',\n          fontSize: 17\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 25,\n              padding: 5,\n            },\n            gridLines: {\n              display: true,\n              drawOnChartArea: false,\n              color: 'rgb(0, 0, 0)',\n              tickMarkLength: 3\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              padding: 5\n            },\n            gridLines: {\n              display: true,\n              drawOnChartArea: false,\n              color: 'rgb(0, 0, 0)',\n              offsetGridLines: false,\n              tickMarkLength: 5\n            },\n          }]\n        }\n      }\n    })\n  }\n\n  return(\n    <div className='modal-chart-mixed' >\n      <canvas id='chart-mixed' ref={graphRef} ></canvas>\n    </div>\n    )\n}\n\nexport default connect((state) => {\n  return state\n})(Graph)","export const getGender = (genderRate) => {\n  if(genderRate<=4){\n    return 'Male'\n  } else {\n    return 'Female'\n  }\n}\n","import React, { useEffect, useState }from 'react'\nimport { connect } from 'react-redux'\nimport { getGender } from '../Util'\nimport '../styles/main.css'\nimport '../styles/modal.css';\n\nconst InfoFeatures = (props) => {\n  const [gender, setGender] = useState('Male');\n  const [description, setDescription] = useState(' ');\n\n  useEffect(() => {\n    if (props.currentPokemon !== 0) {\n      setDescription(props.pokemonFeatures.otherFeatures\n        .filter(pokemon => parseInt(pokemon.id)===parseInt(props.currentPokemon.id))\n        .map(pokemon=> (\n          pokemon.flavor_text_entries[1].flavor_text\n        )))\n      setGender(props.pokemonFeatures.otherFeatures\n        .filter(pokemon => parseInt(pokemon.id)===parseInt(props.currentPokemon.id))\n        .map(pokemon=> (\n          getGender(pokemon.gender_rate)\n        )))\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.currentPokemon]);\n\n  return (\n    <div className='modal-body'>\n        <div className='modal-image-container'>\n          <img className='modal-image' \n          src={ 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/' + props.currentPokemon.id + '.png'}\n          alt={ props.currentPokemon.name } \n          />\n        </div>\n        <div className='modal-pokemon-details'>\n          <div className='details-description'>\n            <p>\n              { description } \n            </p>\n          </div>\n          <div className='details-features'>\n            <div className='feature'>\n              <h4 className='feature-name'>Height</h4>\n              <p className='feature-value'>{ props.currentPokemon.height + 'm' }</p>\n            </div>\n            <div className='feature'>\n              <h4 className='feature-name'>Weight</h4>\n              <p className='feature-value'>{ props.currentPokemon.weight + 'kg' }</p>\n            </div>\n            <div className='feature'>\n              <h4 className='feature-name'>Gender</h4>\n              <p className='feature-value'>\n                { gender }\n              </p>\n            </div>\n            <div className='feature'>\n              <h4 className='feature-name'>Abilities</h4>\n              <ul className='feature-value' >\n                { props.currentPokemon.abilities.map((ability, index) => (\n                <li key={ index } >{ ability.ability.name }</li>\n                )) }\n              </ul>\n            </div>\n            <div className='feature'>\n              <h4 className='feature-name'>Type</h4>\n              <ul className='feature-value'>\n                { props.currentPokemon.types.map((type, index) => (\n                <li key={ index } >{ type.type.name }</li>\n                )) } \n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n  )\n}\n\nexport default connect((state) => {\n  return state\n})(InfoFeatures)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport '../styles/main.css'\nimport '../styles/modal.css'\nimport { compareTo, restartComparison } from '../redux/actions/comparisonActions'\nimport { restartPokemon } from '../redux/actions/modalActions'\nimport Graph from './Graph';\nimport InfoFeatures from './InfoFeatures'\n\nconst InfoModal = (props) =>{  \n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    if (props.currentPokemon !== 0 ) {\n      setOpenModal(true)\n    }\n  }, [props.currentPokemon]);\n\n  const compareToHandler = (event) => {\n    const current = event.currentTarget.id\n    const id=current.substring(current.indexOf('_')+1)\n    props.compareTo(props.pokemonFeatures.features.filter(pokemon => parseInt(pokemon.id)===parseInt(id))[0])\n    setOpenModal(false)\n  }\n\n  const closeHandler = () =>{\n    setOpenModal(false)\n    props.restartPokemon()\n  }\n\n  return(\n    <div className='container'>\n      <div className={'backdrop' + (openModal ? ' open' : '')} onClick={ closeHandler }></div>\n      <div className={'modal' + (openModal ? ' open' : '') } >\n        { props.currentPokemon !==0 ?  \n        <div>\n          <div className='modal-header'>\n            <div className='modal-header-items'>\n              <div className='modal-pokemon-name'>\n                { props.currentPokemon.name.toUpperCase() }\n              </div>\n              <button id={ props.currentPokemon.name + '_' + props.currentPokemon.id } className='compare-button' onClick= { compareToHandler }>Compare to...</button>\n            </div>\n            <div className='out-modal' onClick={ closeHandler }>x</div>\n          </div>\n          <InfoFeatures />\n          <Graph/>\n        </div> : ' '\n          }\n      </div>\n    </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    compareTo: (id) => dispatch(compareTo(id)),\n    restartComparison: () => dispatch(restartComparison()),\n    restartPokemon: () => dispatch(restartPokemon())\n  }\n}\n\nexport default connect((state) => {\n  return state\n}, mapDispatchToProps)(InfoModal)","import React from 'react'\nimport { connect } from 'react-redux'\nimport '../styles/main.css'\nimport '../styles/comparisonModal.css'\n\nconst ComparisonCard = (props) => {\n  return(\n    <div> \n      <div className={ 'comparison-card' + (props.comparison.length === 1 ? ' open-comparison' : '') }>\n        <h4 className='comparison-header'>Comparing pokemon</h4>\n         {\n         props.comparison.length === 1 ? \n            <div className='comparison-item' key={ props.comparison[0].id}>\n              { props.comparison[0].name.toUpperCase()}\n            </div>\n            : ''\n          }\n      </div>\n    </div>  \n    )\n}\n\nexport default connect((state) => {\n  return state\n})(ComparisonCard)","import React, { useEffect, useState } from 'react'\nimport { connect } from 'react-redux'\nimport { getGender } from '../Util'\nimport '../styles/main.css';\nimport '../styles/modal.css';\n\nconst ComparisonFeatures = (props) => {\n  const [genderOne, setGenderOne] = useState('Male');\n  const [genderTwo, setGenderTwo] = useState('Male');\n\n  useEffect(() => {\n    if (props.comparison.length === 2) {\n      setGenderOne(props.pokemonFeatures.otherFeatures\n        .filter(pokemon => parseInt(pokemon.id) === parseInt(props.comparison[0].id))\n        .map(pokemon => (\n          getGender(pokemon.gender_rate)\n        )))\n      setGenderTwo(props.pokemonFeatures.otherFeatures\n        .filter(pokemon => parseInt(pokemon.id) === parseInt(props.comparison[1].id))\n        .map(pokemon => (\n          getGender(pokemon.gender_rate)\n        )))\n    }\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [props.comparison]);\n\n  return(\n      <div className= 'comparison-features'>\n        <div>\n          <div className='comparison-feature-value'>\n            {props.comparison[0].height+'m'}\n          </div>\n          <div className='comparison-feature-value'>\n            {props.comparison[0].weight+'kg'}\n          </div>\n          <div className='comparison-feature-value'>\n            { genderOne }\n          </div>\n          <div>\n            {props.comparison[0].abilities.map((ability,index) => (\n            <div className='comparison-feature-value' key={index}>\n              {ability.ability.name}\n            </div>\n            ))}\n          </div>         \n        </div>\n        <div>\n          <div className='comparison-feature-name'>Height</div>\n          <div className='comparison-feature-name'>Weight</div>\n          <div className='comparison-feature-name'>Gender</div>\n          <div className='comparison-feature-name'>Abilities</div>\n        </div>\n        <div>\n          <div className='comparison-feature-value'>\n            {props.comparison[1].height+'m'}\n          </div>\n          <div className='comparison-feature-value'>\n            {props.comparison[1].weight+'kg'}\n          </div>\n          <div className='comparison-feature-value'>\n            { genderTwo }\n          </div>\n          <div>\n            {props.comparison[1].abilities.map((ability,index) => (\n            <div className='comparison-feature-value' key={index}>\n              {ability.ability.name}\n            </div>\n            ))}\n          </div>         \n        </div>\n      </div> \n    )\n}\n\nexport default connect((state) => {\n  return state\n})(ComparisonFeatures)","import React, { useState, useEffect } from 'react'\nimport { connect } from 'react-redux'\nimport '../styles/main.css'\nimport '../styles/modal.css';\nimport ComparisonCard from './ComparisonCard'\nimport Graph from './Graph';\nimport { restartComparison } from '../redux/actions/comparisonActions'\nimport { restartPokemon } from '../redux/actions/modalActions'\nimport ComparisonFeatures from './ComparisonFeatures';\n\nconst ComparisonModal = (props) => {\n  const [openModal, setOpenModal] = useState(false);\n\n  useEffect(() => {\n    if (props.comparison.length === 2) {\n      setOpenModal(true)\n    }\n  }, [props.comparison]);\n\n  const closeHandler = () => {\n    setOpenModal(false)\n    props.restartComparison()\n    props.restartPokemon()\n  }\n\n  return(\n    <div className='container'>\n      <ComparisonCard />\n      <div className={ 'backdrop' + ( openModal ? ' open' : '') } onClick = { closeHandler }></div>\n      <div className={ 'modal' + ( openModal ? ' open' : '')} > {\n      ((props.comparison.length < 2)) ? '' :\n        <div>\n          <div className='modal-header'>\n            <div className='modal-pokemon-name'>\n              {\n                props.comparison[0].name.toUpperCase() + ' VS ' + props.comparison[1].name.toUpperCase()\n              }\n            </div>\n            <div className='out-modal' onClick ={ closeHandler } >x</div>\n          </div>\n          <div className='modal-comparison-images'>\n            <div className='comparison-image-container'>\n              <img \n                className='comparison-image'\n                src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'+props.comparison[0].id+'.png'}\n                alt=\"pokemon1\"/>\n            </div>\n            <div className='comparison-image-container'>\n              <img \n                className='comparison-image'\n                src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'+props.comparison[1].id+'.png'}\n                alt=\"pokemon2\"/>\n            </div>\n          </div>\n          <ComparisonFeatures />\n          <Graph />\n        </div>   \n      } \n      </div>\n    </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    restartComparison: () => dispatch(restartComparison()),\n    restartPokemon: () => dispatch(restartPokemon())\n  }\n}\n\nexport default connect((state) => {\n  return state\n}, mapDispatchToProps)(ComparisonModal)","import React from 'react'\nimport '../styles/main.css'\nimport '../styles/home.css'\nimport title from '../images/title.png'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  return(\n    <div className='home'> \n      <div className='backdrop-home'>\n        <div className='container-pokemon-title'>\n          <img className = 'pokemon-title-image' src={title} alt=\"\"/>\n        </div>\n        <div className='welcome'> Welcome to Poketionary! </div>\n        <p className = 'welcome-description'>\n          Know everything you need to know about these awesome creatures \n          of the Pokemon World and choose your best competitor\n        </p>\n        <Link to='/pokemon-list'>\n          <button className='goto-pokemons'> LET'S GO</button>\n        </Link>\n      </div> \n    </div>\n  )\n}\n\nexport default Home ","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\nimport store from './redux/store'\nimport NavBar from './components/NavBar'\nimport PokemonList from './components/PokemonList'\nimport InfoModal from './components/InfoModal'\nimport ComparisonModal from './components/ComparisonModal';\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={ store }>\n        <InfoModal />\n        <ComparisonModal/>\n        <Route path='/' exact component = {Home}/>\n        <Route path='/pokemon-list' component = {NavBar}/>\n        <Route path='/pokemon-list' component = {PokemonList}/> \n      </Provider> \n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}
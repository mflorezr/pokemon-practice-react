{"version":3,"sources":["images/title.png","redux/reducers/pokemonListReducer.js","redux/actions/pokemonListAction.js","redux/reducers/pokemonFeaturesReducer.js","redux/actions/pokemonFeaturesActions.js","redux/reducers/modalReducer.js","redux/actions/modalActions.js","redux/actions/comparisonActions.js","redux/reducers/comparisonReducer.js","redux/reducers/index.js","redux/store.js","components/NavBar.js","Util.js","components/PokemonList.js","components/InfoModal.js","components/ComparisonCard.js","components/ComparisonModal.js","components/Home.js","App.js","index.js"],"names":["module","exports","initialState","pokemons","isFetching","error","pokemonsList","state","action","type","payload","features","otherFeatures","isOtherFetching","pokemonFeatures","currentpokemon","id","compareTo","comparison","combineReducers","pokemonList","currentPokemon","store","createStore","root","applyMiddleware","logger","thunk","connect","props","lookFor","React","useRef","className","to","style","textDecoration","placeholder","autoComplete","ref","onChange","currentValue","current","value","toLowerCase","results","filter","pokemon","name","startsWith","map","url","substring","length","allCards","document","getElementsByClassName","Array","from","forEach","card","includes","classList","contains","remove","add","closeModal","modalNumber","backdrop","modal","activeModal","getGender","genderRate","dispatch","fetchPokemons","limit","fetch","then","res","json","catch","toString","fetchFeatures","fetchOthers","updatePokemon","useState","isScrolled","setIsScrolled","setId","isClicked","setIsClicked","useEffect","window","addEventListener","scrollHandler","removeEventListener","listSize","actionToDo","Math","ceil","innerHeight","documentElement","scrollTop","offsetHeight","cardId","pokemonSelected","parseInt","comparisonCard","closeComparisonCard","pokemonClickHandler","e","pokemonId","currentTarget","onScroll","index","key","onClick","src","alt","toUpperCase","restartComparison","stats","closeHandler","indexOf","flavor_text_entries","flavor_text","height","weight","gender_rate","abilities","ability","types","setTimeout","ctx","getElementById","Chart","helpers","each","instances","instance","chart","canvas","destroy","labels","stat","data","base_stat","responsive","datasets","categoryPercentage","backgroundColor","borderColor","borderWidth","options","legend","display","title","text","fontSize","scales","yAxes","ticks","beginAtZero","stepSize","padding","gridLines","drawOnChartArea","color","tickMarkLength","xAxes","offsetGridLines","createChart","firsStats","secondStates","firstStats","secondStats","secondData","order","Home","App","path","exact","component","NavBar","PokemonList","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.db5ff2f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/title.cf6ce1ef.png\";","import { FETCH_POKEMONS_ERROR, FETCH_POKEMONS_SUCCESS, FETCH_POKEMONS_REQUEST } from '../actions/pokemonListAction'\n\nconst initialState = {\n  pokemons: [],\n  isFetching: false,\n  error: null\n}\n\nfunction pokemonsList (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_POKEMONS_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case FETCH_POKEMONS_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        pokemons: action.payload.pokemons\n      }\n\n    case FETCH_POKEMONS_ERROR:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload.error\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default pokemonsList","export const FETCH_POKEMONS_REQUEST = 'FETCH_POKEMONS_REQUEST'\nexport const FETCH_POKEMONS_SUCCESS = 'FETCH_POKEMONS_SUCCESS'\nexport const FETCH_POKEMONS_ERROR = 'FETCH_POKEMONS_ERROR'\n\nexport const fetchPokemons = (limit) => (dispatch) => {\n  dispatch({ type: FETCH_POKEMONS_REQUEST })\n  fetch(`https://pokeapi.co/api/v2/pokemon/?offset=0&limit=${limit}`)\n    .then(res => res.json())\n    .then(pokemons => {\n      dispatch({\n        type: FETCH_POKEMONS_SUCCESS,\n        payload: {\n          pokemons: pokemons.results\n        }\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_POKEMONS_ERROR,\n        error: error.toString()\n      })\n    })\n}","import { \n  FETCH_FEATURE_ERROR,\n  FETCH_FEATURE_SUCCESS,\n  FETCH_FEATURE_REQUEST,\n  FETCH_OTHERFEATURES_ERROR,\n  FETCH_OTHERFEATURES_SUCCESS,\n  FETCH_OTHERFEATURES_REQUEST\n  } from '../actions/pokemonFeaturesActions'\n\nconst initialState = {\n  features: [],\n  otherFeatures:[],\n  error: null,\n  isFetching: true,\n  isOtherFetching:true\n}\n\nfunction pokemonFeatures (state = initialState, action) {\n  switch (action.type) {\n    case FETCH_FEATURE_REQUEST:\n      return {\n        ...state,\n        isFetching: true\n      }\n\n    case FETCH_FEATURE_SUCCESS:\n      return {\n        ...state,\n        features: [...state.features, action.payload.features], \n        isFetching: false\n      }\n\n    case FETCH_FEATURE_ERROR:\n      return {\n        ...state,\n        error: action.payload.error, \n        isFetching: false\n      }\n\n    case FETCH_OTHERFEATURES_REQUEST:\n      return {\n        ...state, \n        isOtherFetching: true\n      }\n\n    case FETCH_OTHERFEATURES_SUCCESS:\n      return {\n        ...state,\n        otherFeatures: [...state.otherFeatures, action.payload.otherFeatures],\n        isOtherFetching: false\n      }\n\n    case FETCH_OTHERFEATURES_ERROR:\n      return {\n        ...state,\n        error: action.payload.error,\n        isOtherFetching: false\n      }\n\n    default:\n      return state\n  }\n}\n\nexport default pokemonFeatures","export const FETCH_FEATURE_REQUEST = 'FETCH_FEATURE_REQUEST'\nexport const FETCH_FEATURE_SUCCESS = 'FETCH_FEATURE_SUCCESS'\nexport const FETCH_FEATURE_ERROR = 'FETCH_FEATURE_ERROR'\nexport const FETCH_OTHERFEATURES_REQUEST = 'FETCH_OTHERFEATURES_REQUEST'\nexport const FETCH_OTHERFEATURES_SUCCESS = 'FETCH_OTHERFEATURES_SUCCESS'\nexport const FETCH_OTHERFEATURES_ERROR = 'FETCH_OTHERFEATURES_ERROR'\n\nexport const fetchFeatures = (url) => (dispatch) => {\n  dispatch({ type: FETCH_FEATURE_REQUEST })\n  fetch(url)\n    .then(res => res.json())\n    .then(pokemon => {\n      dispatch({\n        type: FETCH_FEATURE_SUCCESS,\n        payload: {\n          features: pokemon\n        }\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_FEATURE_ERROR,\n        error: error.toString()\n      })\n    })\n}\n\nexport const fetchOthers = (id) => (dispatch) => {\n  dispatch({ type: FETCH_OTHERFEATURES_REQUEST })\n  fetch('https://pokeapi.co/api/v2/pokemon-species/'+id)\n    .then(res => res.json())\n    .then(pokemon => {\n      dispatch({\n        type: FETCH_OTHERFEATURES_SUCCESS,\n        payload: {\n          otherFeatures: pokemon\n        }\n      })\n    })\n    .catch(error => {\n      dispatch({\n        type: FETCH_OTHERFEATURES_ERROR,\n        error: error.toString()\n      })\n    })\n}\n","import { UPDATE_POKEMON } from '../actions/modalActions'\n\nconst initialState = 0\n\nfunction currentpokemon (state = initialState, action) {\n  switch (action.type) {\n    case UPDATE_POKEMON:\n      return  action.payload.id\n      \n   \n    default:\n      return state\n  }\n}\n\nexport default currentpokemon","export const UPDATE_POKEMON = 'UPDATE_POKEMON'\n\nexport const updatePokemon= (id) => ({\n  type: UPDATE_POKEMON,\n  payload: {\n    id\n  }\n})","export const COMPARE_WITH = 'COMPARE_WITH'\nexport const RESTART = 'RESTART'\n\nexport const compareTo= (id) => ({\n  type: COMPARE_WITH,\n  payload: {\n    id\n  }\n})\n\nexport const restartComparison= () => ({\n  type: RESTART\n})","import { COMPARE_WITH, RESTART } from '../actions/comparisonActions'\n\nconst initialState = []\n\nfunction comparison (state = initialState, action) {\n  switch (action.type) {\n    case COMPARE_WITH:\n      return  [\n        ...state,\n        action.payload.id\n      ]\n      case RESTART:\n      return  []\n    default:\n      return state\n  }\n}\n\nexport default comparison","import { combineReducers } from 'redux'\nimport pokemonList from './pokemonListReducer'\nimport pokemonFeatures from './pokemonFeaturesReducer'\nimport currentPokemon from './modalReducer'\nimport comparison from './comparisonReducer'\n\nexport default combineReducers({\n  pokemonList,\n  pokemonFeatures,\n  currentPokemon,\n  comparison\n})","import { createStore, applyMiddleware } from \"redux\";\nimport root from './reducers/index' \nimport logger from 'redux-logger'\nimport thunk from 'redux-thunk'\n\nconst store = createStore(\n  root,  applyMiddleware(logger, thunk)\n)\n\nexport default store","import React from 'react'\nimport '../styles/navBar.css'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\n\nconst NavBar = (props) => {\n\n  const lookFor= React.useRef()\n\n  const handleInput = () => {\n    const currentValue = lookFor.current.value.toLowerCase()\n    const results = props.pokemonList.pokemons\n      .filter(pokemon => pokemon.name.startsWith(currentValue))\n      .map(pokemon => (\n        pokemon = pokemon.url.substring(34, pokemon.url.length - 1)\n      ))\n    const allCards = document.getElementsByClassName('pokemon-card')\n    Array.from(allCards).forEach(card => {\n      if (results.includes(card.id)) {\n        if (card.classList.contains('hide-card')) {\n          card.classList.remove('hide-card')\n        }\n      } else {\n        card.classList.add('hide-card')\n      }\n    })\n  }\n  \n  return(\n    <div className='nav-bar'>\n      <div className='main-nav'>\n        <Link to ='/' style={{ textDecoration: 'none' }}>\n          <div className='brand-name'>\n             PokéApp\n          </div>\n        </Link>\n        <Link to ='/pokemon-list' style={{ textDecoration: 'none' }}>\n          <div className='nav-item'>\n              Pokemons\n          </div>\n        </Link>\n      </div>\n      <div>\n       <input className='search-box' type=\"search\" placeholder=\"Search\" autoComplete='on' ref={lookFor} onChange={handleInput}/>\n      </div>\n    </div>\n    )\n}\n\nexport default connect((state) => {\n  return state\n})(NavBar)","export const closeModal = (modalNumber) => {\n  const backdrop = document.getElementsByClassName('backdrop')[modalNumber]\n  const modal = document.getElementsByClassName('modal')[modalNumber]\n  if(modal.classList.contains('open')){\n    modal.classList.remove('open');\n    backdrop.classList.remove('open');\n  }\n}\n\nexport const activeModal = (modalNumber) => {\n  const backdrop = document.getElementsByClassName('backdrop')[modalNumber]\n  const modal = document.getElementsByClassName('modal')[modalNumber]\n  if(modal){\n    backdrop.classList.add('open')\n    modal.classList.add('open')\n  }   \n}\n\nexport const activeComparisonCard = () =>{\n  const comparisonCard = document.getElementsByClassName('comparison-card')[0]\n  comparisonCard.classList.add('open-comparison')\n}\n\nexport const closeComparisonCard = () =>{\n  const comparisonCard = document.getElementsByClassName('comparison-card')[0]\n  if(comparisonCard.classList.contains('open-comparison')){\n    comparisonCard.classList.remove('open-comparison')\n  }\n}\n\nexport const getGender = (genderRate) => {\n  if(genderRate<=4){\n    return 'Male'\n  } else {\n    return 'Female'\n  }\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport { fetchPokemons } from '../redux/actions/pokemonListAction'\nimport { fetchFeatures, fetchOthers } from '../redux/actions/pokemonFeaturesActions'\nimport { updatePokemon} from '../redux/actions/modalActions'\nimport { compareTo } from '../redux/actions/comparisonActions'\nimport { activeModal, closeComparisonCard } from '../Util'\nimport '../styles/pokemonList.css'\n\n\nconst PokemonList = (props) =>{  \n  let srcImage = 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'\n  const [isScrolled, setIsScrolled] = useState(false);\n  const [id, setId] = useState(0);\n  const [isClicked, setIsClicked] = useState(false);\n\n  useEffect(() => {\n    props.fetchPokemons(20)\n    window.addEventListener('scroll', scrollHandler);\n    return () => {\n      window.removeEventListener( 'scroll', scrollHandler)\n    }\n  }, []);\n\n  useEffect(() => {\n\t\tif (isScrolled){\n      const listSize=props.pokemonList.pokemons.length\n      props.fetchPokemons(listSize+20)\n      setIsScrolled(false)\n    }\n  }, [isScrolled]);\n  \n  useEffect(() => {\n    if(!props.pokemonFeatures.isFetching && !props.pokemonFeatures.isOtherFetching && isClicked){\n      actionToDo(id)\n      setIsClicked(false)\n    }\n\t}, [props.pokemonFeatures.isFetching, props.pokemonFeatures.isOtherFetching]);\n\n  const scrollHandler = () => {\n    if(Math.ceil(window.innerHeight + document.documentElement.scrollTop) === document.documentElement.offsetHeight){\n      setIsScrolled(true)\n    }\n  }\n\n  const isVisible = () => {\n    const comparisonCard = document.getElementsByClassName('comparison-card')[0]\n    return comparisonCard.classList.contains('open-comparison')\n  }\n\n  const actionToDo = (cardId) =>{\n    const pokemonSelected = props.pokemonFeatures.features.filter(pokemon => parseInt(pokemon.id)===parseInt(cardId))[0]\n    if(isVisible()){\n      props.compareTo(pokemonSelected)\n      activeModal(1)\n      closeComparisonCard()\n    } else{\n      props.updatePokemon(pokemonSelected)\n      activeModal(0)\n    } \n  }\n\n  const pokemonClickHandler = (e) => {\n    const pokemonId = e.currentTarget.id\n    setId(pokemonId)\n    setIsClicked(true)\n    let pokemonExists = props.pokemonFeatures.features.filter(pokemon => parseInt(pokemonId)===parseInt(pokemon.id))\n    if(pokemonExists.length === 0) { \n      props.fetchFeatures(props.pokemonList.pokemons[pokemonId-1].url)\n      props.fetchOthers(pokemonId)\n    } else {\n      actionToDo(pokemonId)\n    }\n  }\n\n  return(\n    <div className = 'pokemon-list' onScroll={scrollHandler}>\n      {props.pokemonList.pokemons.map((pokemon, index) => (\n        <div id={index+1} className='pokemon-card' key={pokemon.url} onClick={pokemonClickHandler}>\n          <div className='pokemon-image-container'>\n            <img className='pokemon-image' \n              src = { \n                    srcImage + pokemon.url.substring(34, pokemon.url.length - 1) +'.png'\n                }  \n              alt={pokemon.name}\n            />\n          </div>\n          <div className = 'pokemon-name'>\n            { pokemon.name.toUpperCase() } \n          </div> \n        </div>\n      ))}\n    </div>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    fetchPokemons: (limit) => dispatch(fetchPokemons(limit)),\n    fetchFeatures: (url) => dispatch(fetchFeatures(url)),\n    fetchOthers: (id) => dispatch(fetchOthers(id)),\n    updatePokemon: (id) => dispatch(updatePokemon(id)),\n    compareTo: (id) => dispatch(compareTo(id))\n  }\n}\n\nexport default connect((state) => {\n  return state\n}, mapDispatchToProps)(PokemonList)","import React from 'react'\nimport { connect } from 'react-redux'\nimport '../styles/modal.css'\nimport Chart from 'chart.js';\nimport { compareTo, restartComparison } from '../redux/actions/comparisonActions'\nimport { closeModal, getGender, activeComparisonCard } from '../Util'\n\nconst InfoModal = (props) =>{  \n\n  const compareToHandler = (e) => {\n    props.restartComparison()\n    const current = e.currentTarget.id\n    const id=current.substring(current.indexOf('-')+1)\n    props.compareTo(props.pokemonFeatures.features.filter(pokemon => parseInt(pokemon.id)===parseInt(id))[0])\n    activeComparisonCard()\n    closeModal(0)\n  }\n\n  const closeHandler = () =>{\n    closeModal(0)\n  }\n\n  const createChart = (stats) => {\n    const ctx = document.getElementById('myChart');\n    Chart.helpers.each(Chart.instances, function(instance){\n      if(instance.chart.canvas.id==='myChart'){\n        instance.chart.destroy()\n      } \n    })\n    const labels= stats.map((stat)=>(\n        stat= stat.stat.name\n    ))\n    const data= stats.map((stat)=>(\n      stat= stat.base_stat\n    ))\n    new Chart(ctx, {\n      type: 'bar',\n      responsive: true , \n      data: {\n        labels: labels,\n        datasets: [{\n          categoryPercentage:0.8,\n          data: data,\n          backgroundColor: '#167a69', \n          borderColor: '#167a69',\n          borderWidth: 1\n        }]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Stats',\n          fontSize: 17\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 25,\n              padding: 5\n            },\n            gridLines: {\n              display: true, \n              drawOnChartArea: false,\n              color: 'rgb(0, 0, 0)',\n              tickMarkLength: 3\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              padding: 5\n            },\n            gridLines: {\n              display: true,\n              drawOnChartArea: false,\n              color: 'rgb(0, 0, 0)',\n              offsetGridLines: false,\n              tickMarkLength: 5\n            },\n          }]\n        }\n      }\n    })\n  }\n\n  const fillChart= (stats)=>{\n    setTimeout( () => {\n      createChart(stats)\n      },100)\n  }\n\n  return(\n    <div className='container'>\n      <div className='backdrop' onClick={closeHandler}></div>\n      <div className='modal' >\n        { props.currentPokemon !==0 ?  \n        <div>\n          <div className='modal-header'>\n            <div className='modal-header-items'>\n              <div className='modal-pokemon-name'>\n                {props.currentPokemon.name.toUpperCase()}\n              </div>\n              <button id={props.currentPokemon.name+'-'+props.currentPokemon.id} className='compare-button' onClick= {compareToHandler}>Compare to...</button>\n            </div>\n            <div className='out-modal' onClick={closeHandler}>x</div>\n          </div>\n          <div className='modal-body'>\n            <div className='modal-image-container'>\n              <img className='modal-image' \n              src={ 'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/' + props.currentPokemon.id + '.png'}\n              alt={props.currentPokemon.name} \n              />\n            </div>\n            <div className='modal-pokemon-details'>\n              <div className='details-description'>\n                <p>\n                  {\n                    props.pokemonFeatures.otherFeatures\n                    .filter(pokemon => parseInt(pokemon.id)===parseInt(props.currentPokemon.id))\n                    .map(pokemon=> (\n                      pokemon.flavor_text_entries[1].flavor_text\n                    ))\n                  } \n                </p>\n              </div>\n              <div className='details-features'>\n                <div className='feature'>\n                  <h4 className='feature-name'>Height</h4>\n                  <p className='feature-value'>{props.currentPokemon.height + 'm'}</p>\n                </div>\n                <div className='feature'>\n                  <h4 className='feature-name'>Weight</h4>\n                  <p className='feature-value'>{props.currentPokemon.weight + 'kg'}</p>\n                </div>\n                <div className='feature'>\n                  <h4 className='feature-name'>Gender</h4>\n                  <p className='feature-value'>\n                    {\n                      props.pokemonFeatures.otherFeatures\n                      .filter(pokemon => parseInt(pokemon.id)===parseInt(props.currentPokemon.id))\n                      .map(pokemon=> (\n                        getGender(pokemon.gender_rate)\n                      ))\n                    }\n                  </p>\n                </div>\n                <div className='feature'>\n                  <h4 className='feature-name'>Abilities</h4>\n                  <ul className='feature-value' >\n                    {props.currentPokemon.abilities.map((ability, index) => (\n                    <li key={index} >{ ability.ability.name}</li>\n                    ))}\n                  </ul>\n                </div>\n                <div className='feature'>\n                  <h4 className='feature-name'>Type</h4>\n                  <ul className='feature-value'>\n                    {props.currentPokemon.types.map((type, index) => (\n                    <li key={index} >{ type.type.name}</li>\n                    ))} \n                  </ul>\n                </div>\n              </div>\n            </div>\n          </div>\n          <div className='modal-chart' >\n            <canvas id='myChart'></canvas>\n          </div>\n          { \n            fillChart(props.currentPokemon.stats)\n          }\n        </div> : ' '\n          }\n      </div>\n    </div>\n    )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    compareTo: (id) => dispatch(compareTo(id)),\n    restartComparison: () => dispatch(restartComparison())\n  }\n}\n\nexport default connect((state) => {\n  return state\n}, mapDispatchToProps)(InfoModal)","import React from 'react'\nimport '../styles/navBar.css'\nimport { connect } from 'react-redux'\nimport '../styles/comparisonModal.css'\n\nconst ComparisonCard = (props) => {\n  \n  return(\n    <div> \n      <div className='comparison-card'>\n        <h4 className='comparison-header'>Comparing pokemon</h4>\n         {\n         props.comparison.length === 1 ? \n            <div className='comparison-item' key={ props.comparison[0].id}>\n              { props.comparison[0].name.toUpperCase()}\n            </div>\n            : ''\n\n          }\n      </div>\n    </div>  \n    )\n}\n\nexport default connect((state) => {\n  return state\n})(ComparisonCard)","import React from 'react'\nimport '../styles/navBar.css'\nimport { connect } from 'react-redux'\nimport { closeModal, getGender } from '../Util'\nimport '../styles/modal.css';\nimport Chart from 'chart.js';\nimport ComparisonCard from './ComparisonCard'\n\nconst ComparisonModal = (props) => {\n\n  const closeHandler = () => {\n    closeModal(1)\n  }\n\n  const createChart = (firstStats, secondStats) => {\n    const ctx = document.getElementById('chart-mixed');\n    const labels= firstStats.map((stat)=>(\n       stat.stat.name\n    ))\n    const data= firstStats.map((stat)=>(\n      stat.base_stat\n    ))\n    const secondData= secondStats.map((stat)=>(\n      stat.base_stat\n    ))\n\n    new Chart(ctx, {\n      type: 'bar',\n      responsive: true , \n      data: {\n        datasets: [{\n          categoryPercentage:0.8,\n          data: data,\n          backgroundColor: '#167a69', \n          borderColor: '#167a69',\n          borderWidth: 1,\n          order: 1\n        },\n        {\n          categoryPercentage:0.8,\n          data: secondData,\n          backgroundColor: '#26b19c', \n          borderColor: '##26b19c',\n          borderWidth: 1,\n          order: 2\n        }],\n        labels: labels\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        title: {\n          display: true,\n          text: 'Stats',\n          fontSize: 17\n        },\n        scales: {\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              stepSize: 25,\n              padding: 5,\n            },\n            gridLines: {\n              display: true, \n              drawOnChartArea: false,\n              color: 'rgb(0, 0, 0)',\n              tickMarkLength: 3\n            },\n          }],\n          xAxes: [{\n            ticks: {\n              padding: 5\n            },\n            gridLines: {\n              display: true,\n              drawOnChartArea: false,\n              color: 'rgb(0, 0, 0)',\n              offsetGridLines: false,\n              tickMarkLength: 5\n            },\n          }]\n        }\n      }\n    })  \n  }\n\n  const fillChart= (firsStats, secondStates)=>{\n    setTimeout( () => {\n      createChart(firsStats,secondStates)\n      },100)\n  }\n\n  return(\n    <div className='container'>\n      <ComparisonCard />\n      <div className='backdrop' onClick={closeHandler}></div>\n      <div className='modal' > {\n      ((props.comparison.length < 2)) ? '' :\n        <div>\n          <div className='modal-header'>\n            <div className='modal-pokemon-name'>\n              {\n                props.comparison[0].name.toUpperCase() + ' VS ' + props.comparison[1].name.toUpperCase()\n              }\n            </div>\n            <div className='out-modal' onClick={closeHandler} >x</div>\n          </div>\n          <div className='modal-comparison-images'>\n            <div className='comparison-image-container'>\n              <img \n                className='comparison-image'\n                src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'+props.comparison[0].id+'.png'}\n                alt=\"pokemon1\"/>\n            </div>\n            <div className='comparison-image-container'>\n              <img \n                className='comparison-image'\n                src={'https://raw.githubusercontent.com/PokeAPI/sprites/master/sprites/pokemon/'+props.comparison[1].id+'.png'}\n                alt=\"pokemon2\"/>\n            </div>\n          </div>\n          <div className= 'comparison-features'>\n            <div>\n              <div className='comparison-feature-value'>\n                {props.comparison[0].height+'m'}\n              </div>\n              <div className='comparison-feature-value'>\n                {props.comparison[0].weight+'kg'}\n              </div>\n              <div className='comparison-feature-value'>\n                {\n                 props.pokemonFeatures.otherFeatures\n                 .filter(pokemon => parseInt(pokemon.id)===parseInt(props.comparison[0].id))\n                 .map(pokemon=> (\n                     getGender(pokemon.gender_rate)\n                   ))\n                }\n              </div>\n              <div>\n                {props.comparison[0].abilities.map((ability,index) => (\n                <div className='comparison-feature-value' key={index}>\n                  {ability.ability.name}\n                </div>\n                ))}\n              </div>         \n            </div>\n            <div>\n              <div className='comparison-feature-name'>Height</div>\n              <div className='comparison-feature-name'>Weight</div>\n              <div className='comparison-feature-name'>Gender</div>\n              <div className='comparison-feature-name'>Abilities</div>\n            </div>\n            <div>\n              <div className='comparison-feature-value'>\n                {props.comparison[1].height+'m'}\n              </div>\n              <div className='comparison-feature-value'>\n                {props.comparison[1].weight+'kg'}\n              </div>\n              <div className='comparison-feature-value'>\n                {\n                 props.pokemonFeatures.otherFeatures\n                 .filter(pokemon => parseInt(pokemon.id)===parseInt(props.comparison[1].id))\n                 .map(pokemon=> (\n                     getGender(pokemon.gender_rate)\n                   ))\n                }\n              </div>\n              <div>\n                {props.comparison[1].abilities.map((ability,index) => (\n                <div className='comparison-feature-value' key={index}>\n                  {ability.ability.name}\n                </div>\n                ))}\n              </div>         \n            </div>\n          </div>\n          <div className='modal-chart-mixed' >\n              <canvas id='chart-mixed'></canvas>\n          </div>\n            {\n              fillChart(props.comparison[0].stats,props.comparison[1].stats)\n            }\n        </div>   \n      } \n      </div>\n    </div>\n   \n    )\n}\n\nexport default connect((state) => {\n  return state\n})(ComparisonModal)","import React from 'react'\nimport '../styles/home.css'\nimport title from '../images/title.png'\nimport { Link } from 'react-router-dom'\n\nconst Home = () => {\n  return(\n    <div className='home'> \n      <div className='backdrop-home'>\n        <div className='container-pokemon-title'>\n          <img className = 'pokemon-title-image' src={title} alt=\"\"/>\n        </div>\n        <div className='welcome'> Welcome to Poketionary! </div>\n        <p className = 'welcome-description'>\n          Know everything you need to know about these awesome creatures \n          of the Pokemon World and choose your best competitor\n        </p>\n        <Link to='/pokemon-list'>\n          <button className='goto-pokemons'> LET'S GO</button>\n        </Link>\n      </div> \n    </div>\n  )\n}\n\nexport default Home ","import React from 'react';\nimport { Provider } from 'react-redux'\nimport { HashRouter, Route } from 'react-router-dom'\nimport store from './redux/store'\nimport NavBar from './components/NavBar'\nimport PokemonList from './components/PokemonList'\nimport InfoModal from './components/InfoModal'\nimport ComparisonModal from './components/ComparisonModal';\nimport Home from './components/Home'\n\nfunction App() {\n  return (\n    <HashRouter>\n      <Provider store={ store }>\n        <InfoModal />\n        <ComparisonModal/>\n        <Route path='/' exact component = {Home}/>\n        <Route path='/pokemon-list' component = {NavBar}/>\n        <Route path='/pokemon-list' component = {PokemonList}/> \n      </Provider> \n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}